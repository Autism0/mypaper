% 请在 CNabstract 环境中输入中文摘要的内容。
\lhead{\xiaowuhao\cnthesistitle}
\chead{}
\rhead{\xiaowuhao摘要}
\begin{CNabstract}

\par{软件维护作为保障软件质量的有效手段，是软件生命周期中最耗人力和时间的阶段。由于代码实体之间关系复杂，当开发人员进行代码修改工作时，一部分代码的修改可能会影响到软件中的其他部分。如何确定代码影响范围，让开发人员能快速确定需要修改的软件实体，成为影响代码修改效率的重要因素。另外，当开发人员完成代码修改后，代码需要通过审核才能提交至代码库中。审核不通过，需要开发人员再次对代码进行修改。“修改-审核”的次数直接关系着整个代码修改周期的长短，从而影响代码修改的完成效率。本文主要关注于如何辅助开发人员快速和准确确定修改的影响范围，以及预测修改周期的长短。}
\par{随着开源软件的飞速发展，互联网上积累了大量软件维护数据（如：代码修改提交数据）。这些维护数据记录已有软件修改中元素之间如何互相影响，以及软件修改的审核过程。利用这些数据中隐含的规律，能够帮助更准确预测修改的影响范围以及修改周期。本文针对如何确定代码修改的影响范围，提出一种基于历史修改模式的影响分析方法。该方法收集了大量开源项目的历史修改提交数据，通过代码修改相似度及修改目标相似度筛选与当前修改任务相似的提交；再利用相似提交中的修改传播模式指导影响分析。实验结果表明，我们的方法对传统影响分析结果具有很好的提升效果，在多个项目上影响集前5和前10的召回率、精确率平均提升超过15\%。针对代码修改周期预测问题，本文提出一种基于可判别性特征的修改周期预测方法，该方法通过代码修改过程中“修改-审核”的次数衡量修改周期的长短。具体地，我们从代码修改数据和审查数据中提取多维度的可判别特征，再结合机器学习方法，训练预测模型。我们在两个真实的开源项目的提交数据集中对模型进行了测试，实验结果表明，我们的预测模型在修改周期长短的预测上具有较高的准确性，对开发人员提前预估代码修改和审核时间有较大的帮助。}
\end{CNabstract}

% 请在 \cnkeywd{} 的参数中加入关键词。
% 所有的 \cnkeywd 命令必须在 CNabstract 环境后面调用。

% 每一个关键词调用一次 \cnkeywd 命令。命令的闭合花括号后面应当紧跟着注释符号（即
% "%"），否则会在顿号前面增加一个空格。
\cnkeywd{影响分析}% 填入一条关键词
\cnkeywd{代码提交}
\cnkeywd{代码审核}
\cnkeywd{修改周期}
\cnkeywd{机器学习}
