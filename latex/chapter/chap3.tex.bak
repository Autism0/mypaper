
\rhead{\xiaowuhao\sectionindex\quad基于可判别特征的代码修改完成周期预测}
\section{基于可判别特征的代码修改完成周期预测}
\par{一项软件代码修改工作通常包含多次“修改-审核-再修改”的过程，开发人员在修改完代码后需提交给审核人员，即一项代码修改工作完成的标志是通过代码审核人员的审查。代码审核不通过，则开发人员需对代码进行再次改进。因此，一项代码修改任务往往经过了多次的代码审核环节，代码审核的次数也能体现该任务周期的长短。审核次数的预测有助于开发人员及时发现代码修改中存在的问题，以及有助于项目管理人员重新评估该代码修改任务的工作量和难度，并及时做出调整，如增加开发人员等，进而缩短代码修改任务的完成周期。本文以代码审核次数表示代码修改完成周期的长短，并从代码审核数据中提取可判别特征，训练机器学习模型，用于预测代码修改的审核次数。我们的方法从代码审核数据中提取代码审核信息、代码耦合信息以及代码修改信息作为可判别特征，再使用集成学习方法融合多个机器学习模型得到我们的分类模型。}
\subsection{问题描述及方法总览}
\par{代码修改完成周期指的是开发人员完成一项代码修改工作的时间周期，而开发人员将他们的代码提交到软件项目之前需要通过代码审核人员的审查，因此，在本文中，我们通过代码审核次数来评估代码修改完成周期。如图\ref{fig:review-day}所示，我们从1000条代码审核数据中调研了代码修改工作中代码审核次数与修改完成时间的关系，从中可以发现，代码审核次数与代码修改完成时间之间存在强相关性，代码审核次数增加意味着代码修改完成时间增加。图\ref{fig:review-day}中折线的点代表着该审核次数下修改任务完成时间的平均值，修改完成时间的平均值与代码审核次数存在同步增加的趋势，代码修改完成时间的长短可以由代码审核次数反应。
\begin{figure}[h]
\centering
\includegraphics[width=5.5in]{myfigure/review-day.png}
\caption{代码审核次数与修改完成周期关联图}
\label{fig:review-day}
\end{figure}}

\par{图\ref{fig:method2}展示了本文方法的总览。该方法主要分为三个阶段：代码审核数据收集阶段、可判别特征提取阶段和机器学习模型构建阶段。代码审核软件的广泛使用，使得审核过程中的历史信息更加容易收集。本文从Gerrit代码审核软件中获取开源项目维护过程中代码审核信息，主要包括审核文本信息以及代码修改信息。在可判别特征提取阶段，我们从代码审核数据中提取审核文本特征、代码耦合特征以及代码修改特征。审核文本特征用于衡量代码审核过程中的非修改因素，包括审核人员信息、审核提交时间、项目信息等。代码耦合特征用于衡量修改代码实体之间的结构耦合特征，与修改复杂程度关联。代码修改特征用于衡量修改内容以及修改的工作量等。在模型构建阶段，本文测试多个机器学习模型的预测效果，并通过集成学习方法Stacking对多个模型进行融合，实现本文的修改完成周期预测模型。
\begin{figure}[h]
\centering
\includegraphics[width=5.5in]{myfigure/method2.pdf}
\caption{基于可判别特征的代码修改完成周期预测方法总览}
\label{fig:method2}
\end{figure} } 
\subsection{可判别特征的提取}
\par{本节详细介绍了修改完成周期预测模型的特征提取方法，我们将从三个维度提取特征来描述代码修改工作，这些维度特征为：审核文本特征、代码耦合特征以及代码修改特征。审核文本特征描述代码审核过程中的因素对整个时间周期的影响；代码耦合特征可以刻画该修改工作的复杂度；代码修改特征用于衡量代码修改工作的工作量。}
\subsubsection{代码审核文本特征提取}
\par{代码修改的审核过程中存在诸多非修改因素，这些非修改因素对代码审核的通过率产生了直接的影响。审核人员的工作量和经验、开发人员的经验和参与度会直接关系着代码审核流程的质量\cite{kononenko2015investigating}。原则上，代码审核是一个透明的过程，审核人员的目标是及时评估提交代码的质量，然而，在实践中代码审核的执行过程会受到各种因素的影响\cite{baysal2016investigating}。本文从代码审核文本信息中提取了10种特征，用于描述代码审核过程中各种因素对代码修改完成时间的影响。}
\par{本文提取的代码审核文本特征如表\ref{tf}所示。$MF_{0}$表示该修改提交的管理人员，$MF_{1}$表示该修改提交的作者，$MF_{2}$表示修改提交的审核人员，我们用这三个特征来描述人力因素对完成周期的影响。通常同个软件项目下的开发人员和审核人员数量有限，不同的审核人员和开发人员对于软件项目熟悉程度的差异会导致软件修改工作所需要时间产生很大差距。}

\begin{table}[ht]
\begin{center}
\begin{footnotesize}
\caption{代码审核文本特征及描述}
\label{tf}
\begin{tabular}{|c|c|c|c|}
\hline
\textbf{类型}              & \textbf{特征}           & \textbf{符号} & \textbf{描述}             \\ \hline
\multirow{10}{*}{审核文本特征} & Owner                 & $MF_{0}$         & 修改提交的管理人员                \\ \cline{2-4}
                         & Author                & $MF_{1}$         & 修改提交的作者                 \\ \cline{2-4}
                         & Reviewers             & $MF_{2}$         & 修改提交的审核人员               \\ \cline{2-4}
                         & Project               & $MF_{3}$         & 修改所归属的项目                \\ \cline{2-4}
                         & Branch                & $MF_{4}$         & 修改所归属的项目分支              \\ \cline{2-4}
                         & Time                  & $MF_{5}$         & 修改提交的时间                 \\ \cline{2-4}
                         & Revierws\_Num         & $MF_{6}$         & 审核人员的数量                 \\ \cline{2-4}
                         & Author\_Sum           & $MF_{7}$         & 修改提交作者在项目中总的提交次数        \\ \cline{2-4}
                         & Author\_Sum\_M        & $MF_{8}$         & 修改提交作者在项目中近一个月的提交次数     \\ \cline{2-4}
                         & Reviewer\_Author\_Ave & $MF_{9}$         & 相同审核人员和作者的修改的平均审核次数 \\ \hline
\end{tabular}
\end{footnotesize}
\end{center}
\end{table}
\par{Eyolfson等人\cite{eyolfson2011time}研究了修改的提交时间与提交代码的正确性之间的关系，他们发现在深夜到凌晨4点之间提交的代码更容易出错，同时，在早上7点到中午之间提交的代码错误更少。另外，该研究还发现开发人员提交代码的频率也影响着代码的正确率。参考该研究的结论，我们从代码审核数据中提取了代码提交时间以及开发人员在项目中的活跃度特征，活跃度特征通过开发人员在项目中总的提交次数和近一个月的提交次数来衡量。}